{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAI,uBAAuBH,QAAeC,OAE1CG,EAAI,sBAAsBJ,QAAeC,MAAS,GAEnDA,EAAA,GAEP,CAZaO,SAASC,cAAc,SAwB/BC,iBAAiB,UAXtBC,eAAqBC,GACnBA,EAAEC,iBACF,MAAMC,EAAO,CAAC,EACd,IAAK,MAAOC,EAAMC,KAAUC,OAAOC,QAAQN,EAAEO,cAAcC,UACzDN,EAAKC,IAASC,EAAMA,MACtB,IAAK,IAAIK,EAAI,EAAGA,EAAIP,EAAKQ,OAAQD,IAC/BtB,EAAcsB,EAAGP,EAAKb,OAAOsB,KAAK1B,EAAA2B,OAAOC,SAASC,MAAM7B,EAAA2B,OAAOG,SAC/Db,EAAKb,OAASa,EAAKc,KAErBhB,EAAEO,cAAcU,OAClB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector(\".form\");\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`)\n      }\n    }, delay)\n  })\n}\nasync function event(e) {\n  e.preventDefault();\n  const data = {};\n  for (const [name, value] of Object.entries(e.currentTarget.elements))\n    data[name] = +value.value;\n  for (let i = 0; i < data.amount; i++) {\n    createPromise(i, data.delay).then(Notify.success).catch(Notify.failure);\n    data.delay += data.step;\n  }\n  e.currentTarget.reset();\n}\nform.addEventListener(\"submit\", event);"],"names":["$9EgcF","parcelRequire","$75aa520dfb7f3d3e$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","document","querySelector","addEventListener","async","e","preventDefault","data","name","value","Object","entries","currentTarget","elements","i","amount","then","Notify","success","catch","failure","step","reset"],"version":3,"file":"03-promises.44017e51.js.map"}